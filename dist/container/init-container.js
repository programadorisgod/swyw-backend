import { db } from "../db/index.js";
import { DIContainer } from "./container.js";
import { TOKENS } from "./tokens.js";
import { eventsTable } from "../db/schema.js";
import { BaseDao } from "../dao/base-dao.js";
import { NlpProcessor } from "../features/Events/services/nlp/nlp-processor.js";
import { EventRespository } from "../features/Events/repository/event.js";
import { EventMediator } from "../features/Events/mediator/event-mediator.js";
import { EventService } from "../features/Events/services/event/event.js";
import { EventController } from "../features/Events/controllers/event.js";
import { ProviderAIModel } from "../share/utils/ai/provider/provider-model-ai.js";
export const initContainer = () => {
  const container = DIContainer.getInstance();
  const aiModelFactory = ProviderAIModel.create();
  const aiModel = aiModelFactory.createAIModel();
  container.registerService(TOKENS.database, db);
  container.registerDAO(TOKENS.DAO, TOKENS.database, eventsTable, BaseDao);
  container.registerService(TOKENS.repositoryEvents, new EventRespository());
  container.registerService(TOKENS.eventService, new EventService());
  container.registerService(TOKENS.aiModel, aiModel);
  container.registerService(TOKENS.nlp, new NlpProcessor());
  container.registerService(TOKENS.eventMediator, new EventMediator());
  container.registerService(TOKENS.eventController, new EventController());
};